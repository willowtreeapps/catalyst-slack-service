name: Deploy to Production

on: repository_dispatch

jobs:
  deploy:
    name: Prod deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 12
        uses: actions/setup-java@v1
        with:
          java-version: 12

      - name: Setup sbt
        run: sbt --version && sbt --version

      - name: Run unit tests
        run: sbt "testOnly **slackservice*"

      - name: Run api tests
        run: sbt "testOnly **biascorrectservice.api*"
        env:
          BIAS_CORRECT_URL: ${{ secrets.PROD_BIAS_CORRECT_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}
          prefix: prod

      - name: Print generated build number
        run: echo Build number is $BUILD_NUMBER

      - name: Build and publish docker image
        id: build-image
        env:
          DOCKER_REPOSITORY: ${{ secrets.PROD_DOCKER_REPOSITORY }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          VERSION_NUMBER: ${{ steps.buildnumber.outputs.build_number }}
        run: |
          sbt docker:publish
          echo "::set-output name=image::$DOCKER_REPOSITORY/$PROJECT_NAME:$VERSION_NUMBER"

      - name: Initialize task definition
        id: task-def-init
        env:
          AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
          AWS_ENVIRONMENT: prod
        run: |
          sh ./scripts/init_task_definition.sh

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.PROD_CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.PROD_SERVICE_NAME }}
          cluster: ${{ secrets.PROD_CLUSTER_NAME }}
          #currently taking approx 6 mins to check stability
          wait-for-service-stability: true
